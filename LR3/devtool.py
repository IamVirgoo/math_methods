import numpy as np
from sympy import *


def get_eigenvalues(coefs):
    n = len(coefs)
    x = Symbol('x')
    answer = x ** n
    for i in range(n):
        answer -= coefs[n - 1 - i] * x ** i
    return solve((-1) ** n * (answer), x)


matrix_new = np.array((
    (-5.0793650794,	-0.8174603175,	0.2054673721,	-4.2134038801,	2.1005291005),
    (0.7553994275,	6.939630497,	1.9010032671,	-1.0238239801,	-2.7721398213),
    (-4.8553213635,	2.2016653656,	-1.4317518143,	0.3937606615,	12.973024547),
    (-8.9997397866,	-2.695680458,	4.1752826206,	1.7886778269,	-2.9970509151),
    (-4.3721051262,	-1.176945095,	3.3458524879,	0.1907074913,	1.7828085697)
))


matrix_dev = np.array((
    (-4.5617551463,	-9.3551823763,	-10.466233297,	3.0485734922,	0.5196821957),
    (0.6243228602,	6.7698627663,	1.8026363308,	-1.7184001445,	-4.3663777537),
    (1.1592632719,	-0.3383893102,	4.5532683279,	1.2343806428,	6.905381004),
    (-2.7055796316,	-0.3863308053,	-1.4862766342,	3.5103828097,	-7.5989526905),
    (4.9650595883,	6.6082520766,	6.2493680029,	-3.4527807873,	-0.2717587577)
))


matrix_out = np.array((
    (5, 6, 3),
    (-1, 0, 1),
    (1, 2, -1)
))


metrix_ = np.array((
    (-5.496032, -4.153618, 11.60026057, 1.557029, -3.164633),
    (-2.225157, -0.193178, -19.97299538, -2.907853, 6.0289),
    (-3.626436, -6.880966, -6.903825654, -6.496388, -1.037427),
    (3.141419, 0.927751, 9.797346915, -1.489755, -2.778278),
    (-4.149118, -9.196849, 0.470804217, -8.367168, -7.91721)
))